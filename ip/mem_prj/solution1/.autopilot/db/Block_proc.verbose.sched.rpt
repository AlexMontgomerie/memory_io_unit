

================================================================
== Vivado HLS Report for 'Block_proc'
================================================================
* Date:           Mon Jun 11 14:12:33 2018

* Version:        2017.1 (Build 1846317 on Fri Apr 14 19:19:38 MDT 2017)
* Project:        mem_prj
* Solution:       solution1
* Product family: zynq
* Target device:  xc7z020clg484-1


================================================================
== Performance Estimates
================================================================
+ Timing (ns): 
    * Summary: 
    +--------+--------+----------+------------+
    |  Clock | Target | Estimated| Uncertainty|
    +--------+--------+----------+------------+
    |ap_clk  |  800.00|     10.88|      100.00|
    +--------+--------+----------+------------+

+ Latency (clock cycles): 
    * Summary: 
    +-----+-----+-----+-----+---------+
    |  Latency  |  Interval | Pipeline|
    | min | max | min | max |   Type  |
    +-----+-----+-----+-----+---------+
    |    2|   21|    2|   21|   none  |
    +-----+-----+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        N/A

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 2
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states: 4
* Pipeline: 0
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 
	2  / (!tmp_8)
	3  / (tmp_8)
2 --> 
	4  / true
3 --> 
	4  / true
4 --> 
* FSM state operations: 

 <State 1>: 2.07ns
ST_1: empty (18)  [1/1] 0.00ns
newFuncRoot:0  %empty = call i32 (...)* @_ssdm_op_SpecMemCore([8 x i32]* %test_init_arr_V, [1 x i8]* @p_str, [7 x i8]* @RAM_1P_str, [1 x i8]* @p_str, i32 -1, [1 x i8]* @p_str, [1 x i8]* @p_str, [1 x i8]* @p_str, [1 x i8]* @p_str, [1 x i8]* @p_str)

ST_1: StgValue_6 (19)  [1/1] 0.00ns
newFuncRoot:1  call void (...)* @_ssdm_op_SpecInterface(i1* %in_V_dest_V, i1* %in_V_id_V, i1* %in_V_last_V, i1* %in_V_user_V, i4* %in_V_strb_V, i4* %in_V_keep_V, i32* %in_V_data_V, [5 x i8]* @p_str10441, i32 1, i32 1, [5 x i8]* @p_str10442, i32 0, i32 0, [1 x i8]* @p_str10436, [1 x i8]* @p_str10436, [1 x i8]* @p_str10436, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str10436, [1 x i8]* @p_str10436)

ST_1: StgValue_7 (20)  [1/1] 0.00ns
newFuncRoot:2  call void (...)* @_ssdm_op_SpecInterface(i1* %out_V_dest_V, i1* %out_V_id_V, i1* %out_V_last_V, i1* %out_V_user_V, i4* %out_V_strb_V, i4* %out_V_keep_V, i32* %out_V_data_V, [5 x i8]* @p_str10441, i32 1, i32 1, [5 x i8]* @p_str10442, i32 0, i32 0, [1 x i8]* @p_str10436, [1 x i8]* @p_str10436, [1 x i8]* @p_str10436, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str10436, [1 x i8]* @p_str10436)

ST_1: mask_read (21)  [1/1] 0.00ns
newFuncRoot:3  %mask_read = call i32 @_ssdm_op_Read.ap_auto.i32(i32 %mask)

ST_1: rw_read (22)  [1/1] 0.00ns
newFuncRoot:4  %rw_read = call i32 @_ssdm_op_Read.ap_auto.i32(i32 %rw)

ST_1: tmp (23)  [1/1] 0.00ns  loc: mem.cpp:60
newFuncRoot:5  %tmp = trunc i32 %rw_read to i2

ST_1: tmp_8 (24)  [1/1] 2.07ns  loc: mem.cpp:60
newFuncRoot:6  %tmp_8 = icmp eq i2 %tmp, 0

ST_1: StgValue_12 (25)  [1/1] 0.00ns  loc: mem.cpp:60
newFuncRoot:7  br i1 %tmp_8, label %0, label %1

ST_1: StgValue_13 (27)  [2/2] 1.77ns  loc: mem.cpp:63
:0  call fastcc void @mem_read(i32* %in_V_data_V, i4* %in_V_keep_V, i4* %in_V_strb_V, i1* %in_V_user_V, i1* %in_V_last_V, i1* %in_V_id_V, i1* %in_V_dest_V)

ST_1: StgValue_14 (28)  [2/2] 0.00ns  loc: mem.cpp:64
:1  call fastcc void @mem_write(i32* %out_V_data_V, i4* %out_V_keep_V, i4* %out_V_strb_V, i1* %out_V_user_V, i1* %out_V_last_V, i1* %out_V_id_V, i1* %out_V_dest_V, i32 %mask_read, [8 x i32]* %test_init_arr_V)

ST_1: tmp_1 (31)  [1/1] 0.00ns  loc: mem.cpp:66
:0  %tmp_1 = trunc i32 %rw_read to i1

ST_1: StgValue_16 (32)  [1/1] 0.00ns  loc: mem.cpp:66
:1  br i1 %tmp_1, label %2, label %._crit_edge

ST_1: StgValue_17 (34)  [2/2] 1.77ns  loc: mem.cpp:67
:0  call fastcc void @mem_read(i32* %in_V_data_V, i4* %in_V_keep_V, i4* %in_V_strb_V, i1* %in_V_user_V, i1* %in_V_last_V, i1* %in_V_id_V, i1* %in_V_dest_V)


 <State 2>: 0.00ns
ST_2: StgValue_18 (27)  [1/2] 0.00ns  loc: mem.cpp:63
:0  call fastcc void @mem_read(i32* %in_V_data_V, i4* %in_V_keep_V, i4* %in_V_strb_V, i1* %in_V_user_V, i1* %in_V_last_V, i1* %in_V_id_V, i1* %in_V_dest_V)

ST_2: StgValue_19 (28)  [1/2] 0.00ns  loc: mem.cpp:64
:1  call fastcc void @mem_write(i32* %out_V_data_V, i4* %out_V_keep_V, i4* %out_V_strb_V, i1* %out_V_user_V, i1* %out_V_last_V, i1* %out_V_id_V, i1* %out_V_dest_V, i32 %mask_read, [8 x i32]* %test_init_arr_V)

ST_2: StgValue_20 (29)  [1/1] 0.00ns  loc: mem.cpp:65
:2  br label %.ret.exitStub


 <State 3>: 0.00ns
ST_3: StgValue_21 (34)  [1/2] 0.00ns  loc: mem.cpp:67
:0  call fastcc void @mem_read(i32* %in_V_data_V, i4* %in_V_keep_V, i4* %in_V_strb_V, i1* %in_V_user_V, i1* %in_V_last_V, i1* %in_V_id_V, i1* %in_V_dest_V)

ST_3: StgValue_22 (35)  [1/1] 0.00ns  loc: mem.cpp:67
:1  br label %._crit_edge

ST_3: StgValue_23 (37)  [1/1] 0.00ns
._crit_edge:0  br label %.ret.exitStub


 <State 4>: 0.00ns
ST_4: StgValue_24 (39)  [1/1] 0.00ns
.ret.exitStub:0  ret void



============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 800ns, clock uncertainty: 100ns.

 <State 1>: 2.07ns
The critical path consists of the following:
	wire read on port 'rw' [22]  (0 ns)
	'icmp' operation ('tmp_8', mem.cpp:60) [24]  (2.07 ns)

 <State 2>: 0ns
The critical path consists of the following:

 <State 3>: 0ns
The critical path consists of the following:

 <State 4>: 0ns
The critical path consists of the following:


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
